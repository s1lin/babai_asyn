cmake_minimum_required(VERSION 3.8.2)
project(cils)

find_package(OpenMP REQUIRED)
find_package(MPI REQUIRED)
find_package(netCDF REQUIRED)
#find_package(Eigen3 3.3 REQUIRED NO_MODULE)
set(CMAKE_CXX_STANDARD 17)

#Basic options
if (CXX_COMPILER_GNUCLANG OR CXX_COMPILER_INTEL)
    set(CMAKE_CXX_FLAGS "-std=c++14 -Wall -Werror")
    set(CMAKE_C_FLAGS "-std=c11 -Wall -Werror")
    set(CMAKE_CXX_FLAGS_DEBUG "-g")
    if (CXX_COMPILER_GNUCLANG)
        set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Og")
        set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Og")
    else ()
        set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -O1")
        set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O1")
    endif ()
    set(CMAKE_CXX_FLAGS_RELEASE "-O3")
elseif (CXX_COMPILER_PGI)
    set(CMAKE_CXX_FLAGS "-std=c++14")
    set(CMAKE_C_FLAGS "-std=c11")
    set(CMAKE_CXX_FLAGS_DEBUG "-g")
    set(CMAKE_CXX_FLAGS_RELEASE "-O2")
elseif (CXX_COMPILER_CRAY)
    set(CMAKE_CXX_FLAGS "-h std=c++14 -h error_on_warning")
    set(CMAKE_C_FLAGS "-h std=c11 -h error_on_warning")
    set(CMAKE_CXX_FLAGS_DEBUG "-g -O1")
    set(CMAKE_CXX_FLAGS_RELEASE "-O2")
endif ()

if (OPENMP_FOUND)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif ()

include_directories("${EIGEN3_INCLUDE_DIR}")

if (MPI_FOUND)
    include_directories(${MPI_C_INCLUDE_PATH} ${MPI_CXX_INCLUDE_PATH})
    if(SLURM)
        set(MPIEXEC "srun")
        set(MPIOPTS "--cpu-bind=cores")
    else()
        set(MPIEXEC "mpirun")
        set(MPIOPTS "")
    endif(SLURM)

endif ()

add_executable(cils test.cpp src/example/ils_block_search.cpp src/include/cils.h src/source/cils.cpp src/example/ils_babai_search.cpp src/source/cils_block_search_omp.cpp)# src/source/cils_reduction.cpp)

if (MPI_FOUND)
    target_link_libraries(cils ${MPI_LIBRARIES})
    message("-- MPI_FOUND")
endif ()

if (OpenMP_CXX_FOUND)
    target_link_libraries(cils OpenMP::OpenMP_CXX)
    message("-- OpenMP_CXX_FOUND")
endif ()

if (netCDF_FOUND)
    target_link_libraries(cils ${netCDF_LIBRARIES})
    message("-- netCDF_FOUND")
endif ()

#if (Eigen3_FOUND)
##    target_link_libraries(cils Eigen3::Eigen)
#    message("-- Eigen3_FOUND")
#endif ()

