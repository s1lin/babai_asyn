cmake_minimum_required(VERSION 3.8.2)
project(cils)

find_package(OpenMP REQUIRED)
find_package(OpenCL REQUIRED)
find_package(MPI REQUIRED)
find_package(netCDF REQUIRED)
find_package(Eigen3 REQUIRED)
set(CMAKE_CXX_STANDARD 17)

# detect C++ compiler - the C compiler must be the same type too
if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "GNU" OR "${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
    set(CXX_COMPILER_GNUCLANG TRUE)
    if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "GNU")
        set(CXX_COMPILER_GNU TRUE)
        message(STATUS "GNU C++ compiler detected")
        if (NOT ("${CMAKE_C_COMPILER_ID}" MATCHES "GNU"))
            message(SEND_ERROR "C and C++ compilers should match!")
        endif ()
    else ()
        set(CXX_COMPILER_CLANG TRUE)
        message(STATUS "Clang C++ compiler detected")
        if (NOT ("${CMAKE_C_COMPILER_ID}" MATCHES "Clang"))
            message(SEND_ERROR "C and C++ compilers should match!")
        endif ()
    endif ()
elseif ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Intel")
    set(CXX_COMPILER_INTEL TRUE)
    message(STATUS "Intel C++ compiler detected")
    if (NOT ("${CMAKE_C_COMPILER_ID}" MATCHES "Intel"))
        message(SEND_ERROR "C and C++ compilers should match!")
    endif ()
else ()
    message(SEND_ERROR "Could not identify compiler!")
endif ()

if (OPENMP_FOUND)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif ()

if (MPI_FOUND)
    include_directories(${MPI_C_INCLUDE_PATH} ${MPI_CXX_INCLUDE_PATH})
    if(SLURM)
        set(MPIEXEC "srun")
        set(MPIOPTS "--cpu-bind=cores")
    else()
        set(MPIEXEC "mpirun")
        set(MPIOPTS "")
    endif(SLURM)

endif ()

add_executable(cils test.cpp)

if (MPI_FOUND)
    target_link_libraries(cils ${MPI_LIBRARIES})
    message("-- MPI_FOUND")
endif ()

if (OpenMP_CXX_FOUND)
    target_link_libraries(cils OpenMP::OpenMP_CXX)
    message("-- OpenMP_CXX_FOUND")
endif ()

if (netCDF_FOUND)
    target_link_libraries(cils ${netCDF_LIBRARIES})
    message("-- netCDF_FOUND")
endif ()

if (Eigen3_FOUND)
    target_link_libraries(cils Eigen3::Eigen)
    message("-- Eigen3_FOUND")
endif ()

if (OpenCL_FOUND)
    target_link_libraries(cils ${OPENCL_LIBRARIES})
    message("-- OpenCL_FOUND")
endif ()